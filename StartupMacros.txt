// "StartupMacros"
// The macros and tools in this file ("StartupMacros.txt") are 
// automatically installed in the Plugins>Macros submenu and
// in the toolbar when ImageJ starts up.

// The "AutoRun" macro has been replaced by the Edit>Options>Startup command.

  macro "Command Finder Built-in Tool" {}
  macro "Developer Menu Built-in Tool" {}
  macro "Brush Built-in Tool" {}
  macro "Flood Filler Built-in Tool" {}
  macro "Arrow Built-in Tool" {}

  var pmCmds = newMenu("Popup Menu",
       newArray("Help...", "Rename...", "Duplicate...", "Original Scale", 
       "Paste Control...", "-", "Record...", "Capture Screen ", "Monitor Memory...", 
       "List Commands...", "Control Panel...", "Startup Macros...", "Search..."));

  macro "Popup Menu" {
      cmd = getArgument();
      if (cmd=="Help...")
           showMessage("About Popup Menu",
               "To customize this menu, edit the line that starts with\n\"var pmCmds\" in ImageJ/macros/StartupMacros.txt.");
      else
          run(cmd);
  }

 macro "-" {} //menu divider

  macro "About Startup Macros..." {
      path = getDirectory("macros")+"About Startup Macros";
      if (!File.exists(path))
          exit("\"About Startup Macros\" not found in ImageJ/macros/.");
      open(path);
  }

macro "process [r]"{
//Dialog.create("Choose Images ");
//Dialog.addString("File suffix: ", "yes.tif", 5);
//Dialog.show();
//suffix = Dialog.getString();

resultIndex = 0;
run("Clear Results");

//exit = false;
while(true){
dir = getDirectory("Choose a Directory ");
list = getFileList(dir);

for(i =0; i<list.length  ; i++){
	if(endsWith(list[i], ".TIF")){
		print(list[i]);
		open(dir+list[i]);
	}
}

//test = "should work";

//run("doTheThing [test]");
run("doTheThing");

setResult("Label", resultIndex, dir + "_STACK");
updateResults;
resultIndex++;



while (nImages>0) { 
      selectImage(nImages); 
      close(); 
 } 

}
}

//macro "doTheThing [test]"{
macro "doTheThing"{
	//print(test);
	
	title = getTitle();
	run("Images to Stack", "name="+title+" title=[] use");
	run("Make Composite", "display=Composite");
	run("RGB Color", "");
	run("16-bit", "");
	run("Measure", "");
	print("Analyzed " + title + " successfully!");
}

  // This example macro demonstrates how to create a
  // custom command with a keyboard shortcut.
  macro "Save As JPEG... [j]" {
     quality = call("ij.plugin.JpegWriter.getQuality");
     quality = getNumber("JPEG quality (0-100):", quality);
     run("Input/Output...", "jpeg="+quality);
     saveAs("Jpeg");
  }




